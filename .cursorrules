# ChemAgent Rules for Claude Code (Cursor)

## Project Context
ChemAgent is a chemistry-focused enhancement package for AI coding assistants, providing specialized tools, prompts, and workflows for chemical research and education.

## Chemistry Domain Knowledge

### When working with chemical structures:
- Always validate SMILES strings before processing
- Use RDKit for molecular operations when available
- Consider stereochemistry and tautomers
- Check for common structural alerts (PAINS, toxicophores)

### For synthesis planning:
- Start with retrosynthetic analysis
- Consider reaction conditions and feasibility
- Account for protecting group strategies
- Evaluate synthetic accessibility scores

### For drug design tasks:
- Always check Lipinski's Rule of Five
- Consider ADMET properties early
- Evaluate synthetic accessibility
- Check for structural alerts and PAINS

## Available Commands (cc-series)

ChemAgent 使用 Markdown 定义的命令（类似 SuperClaude_Framework）：

### 核心命令（15个精选）:

**分析类（3个）**
- `cc-analyze`: 分析分子结构和性质
- `cc-compare`: 比较多个分子
- `cc-search`: 搜索数据库和文献

**设计类（3个）**
- `cc-design`: 基于目标设计分子
- `cc-optimize`: 优化分子性质
- `cc-synthesize`: 设计合成路线

**预测类（2个）**
- `cc-predict`: 预测性质和反应
- `cc-simulate`: 运行分子模拟

**工作流类（3个）**
- `cc-workflow`: 执行预定义工作流
- `cc-batch`: 批量处理分子
- `cc-report`: 生成综合报告

**辅助类（4个）**
- `cc-explain`: 解释化学概念
- `cc-suggest`: 提供建议
- `cc-check`: 检查安全/专利/合规
- `cc-help`: 获取帮助

### 自定义命令
在 `.claude/commands/` 创建 `.md` 文件来定义新命令

## Sub-Agents

### Available Chemistry Sub-Agents (简化为5个核心角色):
1. **@chemist**: 通用化学专家（默认）
2. **@drug-designer**: 药物设计和ADMET优化
3. **@synthesist**: 合成路线和工艺优化
4. **@safety-expert**: 安全评估和法规合规
5. **@data-analyst**: 数据分析和机器学习

### Sub-Agent Usage:
Sub-agents are defined in Markdown files in the /roles directory.
When invoking a sub-agent (e.g., @chemist), the AI adopts that role's:
- Specialized knowledge and expertise
- Communication style and terminology
- Recommended tools and approaches
- Best practices and safety considerations

## Tool Integration

### Primary Tools:
- RDKit: Molecular operations and descriptors
- PubChem: Chemical database queries
- ChEMBL: Bioactivity data
- PDB: Protein structures
- OpenBabel: Format conversions

### Computational Tools:
- Gaussian/ORCA: QM calculations
- AutoDock: Molecular docking
- Gromacs: MD simulations
- MOE/Schrodinger: Commercial suites

## Best Practices

### Code Generation:
1. Always include proper error handling for chemical operations
2. Validate input structures before processing
3. Use appropriate units and conversions
4. Include relevant citations and references
5. Consider computational cost for large-scale operations

### Data Handling:
1. Use standard chemical file formats (SDF, MOL2, PDB)
2. Preserve stereochemistry information
3. Handle multi-component systems properly
4. Include metadata and provenance
5. Use appropriate compression for large datasets

### Visualization:
1. Use 2D depictions for structure communication
2. Include 3D views for spatial relationships
3. Color-code by properties when relevant
4. Add labels and legends
5. Export in publication-ready formats

## Response Format

### For structure queries:
```
Structure: [SMILES/InChI]
Properties:
  - MW: value
  - LogP: value
  - TPSA: value
  [additional relevant properties]
Visualization: [2D structure image]
Notes: [relevant observations]
```

### For synthesis queries:
```
Target: [structure]
Retrosynthetic Analysis:
  Step 1: [transformation]
  Step 2: [transformation]
  ...
Forward Synthesis:
  1. [reaction conditions]
  2. [reaction conditions]
  ...
Key Considerations: [practical notes]
```

### For property predictions:
```
Input Structure: [SMILES]
Predicted Properties:
  - Property 1: value (confidence)
  - Property 2: value (confidence)
  ...
Model Details: [methodology]
Validation: [metrics if available]
```

## Error Handling

When encountering chemistry-specific errors:
1. Provide clear explanation of the issue
2. Suggest alternatives or corrections
3. Explain chemical constraints
4. Offer to try different approaches
5. Include relevant safety warnings

## Safety Considerations

Always consider and mention:
- Chemical hazards and safety precautions
- Environmental impact
- Regulatory constraints
- Ethical considerations for drug/material design
- Proper waste disposal

## Integration with Claude Code

### Context Awareness:
- Understand the current project type (drug discovery, materials, education, etc.)
- Adapt explanations to user's expertise level
- Maintain consistency across the conversation
- Build on previous context

### Workflow Enhancement:
- Suggest relevant next steps
- Provide alternative approaches
- Offer to generate supporting code/data
- Create comprehensive documentation

## Performance Optimization

For computational chemistry tasks:
1. Suggest appropriate levels of theory
2. Recommend basis sets based on accuracy needs
3. Consider parallelization options
4. Estimate computational time
5. Suggest cloud/HPC resources when needed
